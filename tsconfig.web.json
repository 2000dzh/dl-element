{
	"extends": "./tsconfig.base.json",
	"compilerOptions": {
		/* 基本选项 */
		// 生成额外的元数据文件，这些文件可以帮助构建工具（包括TypeScript自身的--build模式）更快地确定项目是否已经被构建。
		"composite": true,
		// 在 .tsx 文件里支持 JSX
		"jsx": "preserve",
		// 告诉 TypeScript 编译器要包括哪些环境的类型声明文件（`.d.ts` 文件）
		"lib": ["ES2018", "DOM", "DOM.Iterable"],
		// 用于控制是否在编译时跳过对声明文件（.d.ts 文件）的类型检查。
		"skipLibCheck": true,

		/* 模块解析 */
		// types用来指定需要包含的模块，只有在这里列出的模块的声明文件才会被加载进来
		"types": ["vue-macros/macros-global"]
	},
	// include也可以指定要编译的路径列表,但是和files的区别在于,这里的路径可以是文件夹,也可以是文件,可以使用相对和绝对路径,而且可以使用通配符,比如"./src"即表示要编译src文件夹下的所有文件以及子文件夹的文件
	// 指定哪些文件需要打包的时候生成类型文件
	"include": [
		"packages",
		"typings/env.d.ts"
		// "packages/core/index.ts",
		// "packages/hooks/**/*.ts",
		// "packages/utils/**/*.ts",
		// "packages/components/**/*.ts"
	],
	// exclude表示要排除的、不编译的文件,它也可以指定一个列表,规则和include一样,可以是文件或文件夹,可以是相对路径或绝对路径,可以使用通配符
	"exclude": [
		"node_modules",
		"**/dist",
		"**/__tests__/**/*",
		"packages/play",
		"packages/docs",
		"packages/components/coverage",
		"**/gulpfile.ts",
		"**/*.md"
	]
}
